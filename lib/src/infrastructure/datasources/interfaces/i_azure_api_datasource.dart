// Copyright 2023 Patrick Hettich. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import 'dart:io';
import 'package:dart_azure_ad_sign_in/src/infrastructure/models/token_model.dart';

/// **Description:** Datasource Interface/Abstract class to communicate with the Azure API.
abstract class IAzureApiDatasource {
  /// **Description:** Get a new token from the Azure API.
  ///
  /// **Parameter:** String clientId - The Application (client) ID
  /// String code - Code generated by sign in via Web.
  /// int Port - Port of the local http server
  ///
  /// **Returns:** A newly created [Token].
  Future<TokenModel> getToken({
    required String clientId,
    required String code,
    required int port,
  });

  /// **Description:** Refresh an existing token via the Azure API.
  ///
  /// **Parameter:** [Token] - Existing token, uses its refreshToken value.
  ///
  /// **Returns:** The given [Token] with updates from Azure, will be used for updating a token.
  Future<TokenModel> refreshToken({required String refreshToken});

  /// **Description:** Cancel the current [HttpServerDatasource.listenForRequest] by sending it a cancellation request.
  ///
  /// **Parameter:** int Port - Port of the local http server.
  ///
  /// **Returns:** Future<void>
  Future<void> cancelGetToken({required int port});

  /// **Description:** Create Form-data from a Map.
  List<int> createFormData({required Map<String, dynamic> formMap});

  /// **Description:** Create a request to the Azure API.
  Future<HttpClientRequest> createRequest(
      {required List<int> formBytes, required String uri});

  /// **Description:** Read a response from the Azure API.
  Future<String> readResponse({required HttpClientResponse response});
}
